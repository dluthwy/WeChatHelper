<hc:Window x:Class="WeChatHelper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:local="clr-namespace:WeChatHelper"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Background="White" ResizeMode="CanMinimize"
        Title="WeChatHelper" Height="520" Width="800" Icon="angel.png"
        StateChanged="Window_StateChanged"
        Loaded="Window_Loaded">
    <DockPanel>
        <hc:NotifyIcon Text="WeChatHelper" Click="NotifyIcon_Click" IsBlink="False" Visibility="Visible" Icon="angel.png"/>
        <StatusBarItem DockPanel.Dock="Bottom" VerticalAlignment="Center">
            <TextBlock x:Name="tbCurrentTime"></TextBlock>
        </StatusBarItem>
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="3*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="35*"></RowDefinition>
                <RowDefinition Height="10*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Grid.RowSpan="2" Margin="0,0,0.4,0.2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*"></RowDefinition>
                    <RowDefinition Height="3*"></RowDefinition>
                </Grid.RowDefinitions>
                <hc:DashedBorder Grid.Row="0" Margin="5" Padding="10" CornerRadius="10" BorderDashThickness="1" BorderThickness="2" BorderBrush="#FF647C64" BorderDashArray="3, 1">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" Margin="0, 0, 0, 5" Text="微信快捷键："></TextBlock>
                        <TextBox x:Name="tbxWechatHoyKey" Text="{Binding KeyString, Mode=OneWay}" PreviewKeyDown="tbxWechatHoyKey_PreviewKeyDown" DockPanel.Dock="Top" IsReadOnly="True" IsReadOnlyCaretVisible="False" IsUndoEnabled="False" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"></TextBox>
                        <StackPanel DockPanel.Dock="Top" VerticalAlignment="Center" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button x:Name="btnHotKeyTest" Click="btnHotKeyTest_Click" Margin="0, 4, 0, 0" Background="#FFE2CDBC">
                                <TextBlock Text="测试"></TextBlock>
                            </Button>
                        </StackPanel>

                        <TextBlock Margin="0, 5, 0, 5" DockPanel.Dock="Top" Text="检查项："></TextBlock>
                        <ListBox DockPanel.Dock="Top" Style="{DynamicResource ListBoxCustom}" BorderBrush="White">
                            <ListBoxItem>
                                <Border BorderThickness="1" BorderBrush="#d4d4d4" Margin="0, 2" Padding="0" VerticalAlignment="Center">
                                    <DockPanel>
                                        <Image x:Name="imgWeChat" DockPanel.Dock="Right" Source="no.png" Stretch="UniformToFill" VerticalAlignment="Center" HorizontalAlignment="Center" Width="16" Height="16"/>
                                        <TextBlock Text="● 微信运行状态"></TextBlock>
                                    </DockPanel>
                                </Border>
                            </ListBoxItem>
                            <ListBoxItem>
                                <Border BorderThickness="1" BorderBrush="#d4d4d4" Margin="0, 2" Padding="0">
                                    <DockPanel>
                                        <TextBlock Text="● 系统休眠、锁屏设置"></TextBlock>
                                    </DockPanel>
                                </Border>
                            </ListBoxItem>
                        </ListBox>

                        <!--<TextBlock Margin="0, 5, 0, 5" DockPanel.Dock="Top" Text="Windows锁屏密码："></TextBlock>
                        <PasswordBox x:Name="tbxWindowsPasswd" DockPanel.Dock="Top" PasswordChanged="tbxWindowsPasswd_PasswordChanged"></PasswordBox>
                        <Button x:Name="btnPasswdTest" Click="btnPasswdTest_Click" DockPanel.Dock="Top" Background="#B5C4B1" Margin="0, 4, 0, 0" HorizontalAlignment="Right" Content="测试"></Button>-->
                    </DockPanel>
                </hc:DashedBorder>
                <hc:DashedBorder Grid.Row="1" Margin="5" Padding="10" CornerRadius="10" BorderDashThickness="1" BorderThickness="2" BorderBrush="#FF647C64" BorderDashArray="3, 1">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" Margin="0, 5" Text="发送到："></TextBlock>
                        <TextBox x:Name="tbxSend2Name" Text="{Binding Send2Name, Mode=TwoWay}" DockPanel.Dock="Top"></TextBox>
                        <TextBlock DockPanel.Dock="Top" Margin="0, 10" Text="发送内容："></TextBlock>
                        <Button x:Name="btnSendTest" Click="btnSendTest_Click" DockPanel.Dock="Bottom" Content="测试发送" HorizontalAlignment="Right" Background="#FFE2CDBC"></Button>
                        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="{Binding Path=Text.Length, ElementName=tbxSendContent}" FontFamily="Consolas" FontSize="10"></TextBlock>
                            <TextBlock Text=" 字符" FontFamily="Consolas" FontSize="10"></TextBlock>
                        </StackPanel>
                        <TextBox x:Name="tbxSendContent" Text="{Binding SendContent, Mode=TwoWay}" VerticalContentAlignment="Top" DockPanel.Dock="Top" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible"></TextBox>
                    </DockPanel>
                </hc:DashedBorder>
            </Grid>
            <hc:DashedBorder Grid.Row="0" Grid.Column="1"  Margin="4.6,5,4.6,6.4" Padding="10" CornerRadius="10" BorderDashThickness="1" BorderThickness="2" BorderBrush="#FF647C64" BorderDashArray="3, 1">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Top" Text="任务列表："></TextBlock>
                    <DataGrid Name="dgTaskData" DockPanel.Dock="Top" HeadersVisibility="All" RowHeaderWidth="60" AutoGenerateColumns="False" Background="#ECECEA" BorderBrush="White">
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="RegionBrush" Color="#E0E5DF"></SolidColorBrush>
                            <SolidColorBrush x:Key="PrimaryBrush" Color="#96A48B"></SolidColorBrush>
                        </DataGrid.Resources>
                        <DataGrid.RowHeaderTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}"/>
                            </DataTemplate>
                        </DataGrid.RowHeaderTemplate>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="No." IsReadOnly="True" CanUserResize="False" Binding="{Binding Index}"/>
                            <DataGridTextColumn Header="发送到" Binding="{Binding Send2Name}"/>
                            <DataGridTextColumn Header="内容" Binding="{Binding SendContent}"/>
                            <DataGridTextColumn Header="任务描述" IsReadOnly="True" Binding="{Binding SendCronDescription}"/>
                            <DataGridTextColumn Header="任务状态" IsReadOnly="True" Binding="{Binding TaskStateDescription}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </hc:DashedBorder>
            <hc:DashedBorder Grid.Row="1" Grid.Column="1" Margin="4.6,3.6,4.6,5.2" Padding="10" CornerRadius="10" BorderDashThickness="1" BorderThickness="2" BorderBrush="#FF647C64" BorderDashArray="3, 1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"></ColumnDefinition>
                        <ColumnDefinition Width="3*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="0" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <DockPanel Grid.Column="0" VerticalAlignment="Center">
                            <CheckBox x:Name="rbtnUseCustomCron" DockPanel.Dock="Left" IsChecked="{Binding UseCustomCron, Mode=TwoWay}"></CheckBox>
                            <TextBlock DockPanel.Dock="Left" Text="自定义Cron：" VerticalAlignment="Center" HorizontalAlignment="Left"></TextBlock>
                            <TextBox x:Name="tbxCustomCron" Text="{Binding CustomCron, Mode=TwoWay}" DockPanel.Dock="Left" VerticalAlignment="Center" IsEnabled="{Binding ElementName=rbtnUseCustomCron, Path=IsChecked}"></TextBox>
                        </DockPanel>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button x:Name="btnDeleteTask" Click="btnDeleteTask_Click" Padding="0" BorderBrush="White" Margin="0, 0, 20, 0">
                                <Image Source="minus.png"></Image>
                            </Button>
                            <Button Name="btnAddTask" Click="btnAddTask_Click" Padding="0" BorderBrush="White">
                                <Image Source="add.png"></Image>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock VerticalAlignment="Center" Text="发送时间："></TextBlock>
                        <hc:TimePicker Name="tpTaskTime" SelectedTime="{Binding TaskTime, Mode=TwoWay}" Margin="20,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Consolas"></hc:TimePicker>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock VerticalAlignment="Center" Text="发送周期："></TextBlock>
                        <ListBox x:Name="lbxSendWeeks" Margin="10,0,0,0" Style="{DynamicResource WrapPanelHorizontalListBox}" BorderBrush="White">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Content="{Binding TheText, Mode=OneWay}" IsChecked="{Binding IsSelected}" Margin="10,0,0,0"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </Grid>
            </hc:DashedBorder>
        </Grid>
    </DockPanel>
</hc:Window>
